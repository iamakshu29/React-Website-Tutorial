{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Verma\\\\Desktop\\\\Practice\\\\react\\\\react_tut\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let name = \"User\";\n  const [fname, upName] = useState(name); // const display = (event)=>{\n  //     upName(input.value);\n  // };\n\n  const inputEvent = event => {\n    console.log(event.target.value);\n    upName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello \", fname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your name\",\n      onChange: inputEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      value: \"submit kro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"hpf5WScm9upjtR1juxgEvWVaijc=\");\n\n_c = App;\nexport default App; // use camelCase while declaring events like onClick onMouseEnter onDoubleClick  \n// and don't add () after the function name while calling the function in events \n// use hooks while changing the state with events ...\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/src/App.jsx"],"names":["React","useState","App","name","fname","upName","inputEvent","event","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,MAAMC,GAAG,GAAG,MAAI;AAAA;;AACZ,MAAIC,IAAI,GAAG,MAAX;AACA,QAAK,CAACC,KAAD,EAAOC,MAAP,IAAiBJ,QAAQ,CAACE,IAAD,CAA9B,CAFY,CAIZ;AACA;AACA;;AAEA,QAAMG,UAAU,GAAIC,KAAD,IAAS;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAN,IAAAA,MAAM,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAN;AACH,GAHD;;AAKA,sBACI;AAAA,4BACA;AAAA,2BAAWP,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEG;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,iBAA/B;AAAiD,MAAA,QAAQ,EAAIE;AAA7D;AAAA;AAAA;AAAA;AAAA,YAFH,eAGG;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAG;AAA9B;AAAA;AAAA;AAAA;AAAA,YAHH;AAAA,kBADJ;AAOH,CApBD;;GAAMJ,G;;KAAAA,G;AAuBN,eAAeA,GAAf,C,CAGA;AACA;AACA","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst App = ()=>{\r\n    let name = \"User\";\r\n    const[fname,upName] = useState(name);\r\n\r\n    // const display = (event)=>{\r\n    //     upName(input.value);\r\n    // };\r\n\r\n    const inputEvent = (event)=>{\r\n        console.log(event.target.value);\r\n        upName(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Hello {fname}</h1>\r\n           <input type='text' placeholder=\"Enter your name\" onChange = {inputEvent} />\r\n           <button type='submit' value = 'submit kro'/> \r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default App;\r\n\r\n\r\n// use camelCase while declaring events like onClick onMouseEnter onDoubleClick  \r\n// and don't add () after the function name while calling the function in events \r\n// use hooks while changing the state with events ..."]},"metadata":{},"sourceType":"module"}