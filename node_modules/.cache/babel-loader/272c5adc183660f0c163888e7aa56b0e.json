{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Verma\\\\Desktop\\\\Practice\\\\react\\\\react_tut\\\\src\\\\index.js\";\n// we don't use require module syntax because 1. it is used in node.js\n// 2. It is old fashion \n// In new version ie from ES5 we use the import syntax \n// earlier we have to write the old require syntax because our browser can't understand the modern js\n// but there is a compiler called babel which is automatically installed along with react\n//  which can convert the modern js in to browser readable js\n// for example if we write teh ()=>{} function babel compiler convert this into normal function\n// so because of this we can now use the modern js syntax like import \n// const React = require('react');\nimport React from 'react'; // const ReactDOM = require('react-dom');\n\nimport ReactDOM from 'react-dom'; // reactDOM.render function takes 3 paramater(what to show, where to show and callback function());\n// what to show is a look like html syntax called JSX\n// in where to show we use the div present in index.html in public folder and with the help of DOM we show the content on browser..\n// we need react module to use JSX or what to show part\n// we need react-dom module for DOM manipulation or  where to show part \n// 1.\n// ReactDOM.render(<h1> hello world!! </h1>,document.getElementById('root'));\n// 2.\n//  This is the actual form of uppercode and beacause of babel we can write the upper shorter code because babel converted it in actual form itself\n// ReactDOM.render(React.createElement('h1',null,'helloo world!!'),document.getElementById('root'));\n// 3.\n// this is how we write the same in js\n// const h1 = document.createElement('h1');\n// h1.innerHTML = 'Hello World';\n// document.getElementById('root').appendChild(h1);\n// How to render Multiple elements in React...\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \" hello world!! \"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/src/index.js"],"names":["React","ReactDOM","render","document","getElementById"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;;;AACAA,QAAQ,CAACC,MAAT,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzC","sourcesContent":["// we don't use require module syntax because 1. it is used in node.js\n// 2. It is old fashion \n// In new version ie from ES5 we use the import syntax \n// earlier we have to write the old require syntax because our browser can't understand the modern js\n\n// but there is a compiler called babel which is automatically installed along with react\n//  which can convert the modern js in to browser readable js\n// for example if we write teh ()=>{} function babel compiler convert this into normal function\n// so because of this we can now use the modern js syntax like import \n\n// const React = require('react');\nimport React from 'react';\n// const ReactDOM = require('react-dom');\nimport ReactDOM from 'react-dom';\n\n// reactDOM.render function takes 3 paramater(what to show, where to show and callback function());\n// what to show is a look like html syntax called JSX\n// in where to show we use the div present in index.html in public folder and with the help of DOM we show the content on browser..\n\n// we need react module to use JSX or what to show part\n// we need react-dom module for DOM manipulation or  where to show part \n\n// 1.\n// ReactDOM.render(<h1> hello world!! </h1>,document.getElementById('root'));\n\n// 2.\n//  This is the actual form of uppercode and beacause of babel we can write the upper shorter code because babel converted it in actual form itself\n// ReactDOM.render(React.createElement('h1',null,'helloo world!!'),document.getElementById('root'));\n\n// 3.\n// this is how we write the same in js\n// const h1 = document.createElement('h1');\n// h1.innerHTML = 'Hello World';\n// document.getElementById('root').appendChild(h1);\n\n\n\n\n// How to render Multiple elements in React...\nReactDOM.render(<h1> hello world!! </h1>,document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}