{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Verma\\\\Desktop\\\\Practice\\\\react\\\\react_tut\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport Cards from './Cards';\nimport Seriesdata from './Seriesdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \" List of Top 5 Series in 2020.. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Cards, {\n        imgsrc: \"images/sex_ed.jpg\",\n        title: \"A Netflix Original Series\",\n        sname: \"Sex Education\",\n        slink: \"https://www.netflix.com/in/title/80197526\",\n        clName: \"netflix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cards, {\n        imgsrc: Seriesdata[1].imgsrc,\n        title: Seriesdata[1].title,\n        sname: Seriesdata[1].sname,\n        slink: Seriesdata[1].slink,\n        clName: Seriesdata[1].clName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cards, {\n        imgsrc: Seriesdata[2].imgsrc,\n        title: Seriesdata[2].title,\n        sname: Seriesdata[2].sname,\n        slink: Seriesdata[2].slink,\n        clName: Seriesdata[2].clName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cards, {\n        imgsrc: Seriesdata[3].imgsrc,\n        title: Seriesdata[3].title,\n        sname: Seriesdata[3].sname,\n        slink: Seriesdata[3].slink,\n        clName: Seriesdata[3].clName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\nexport default App; //*            About PROPS\n// * Like we can make our own tags in React which are known as components and can be use again and again\n// * then mostly all tags have attribute either it is className , id in h1,p tags or type,  placeholder in input tags\n// * it means we can make our custom attributes for components too . So in react that custom attributes are knows as 'props' which act as an object and the attributes inside the props objects can be \n// * accessed by . operator ie props.<attrName> where the component is made ie in Cards.jsx file\n//TODO   here slink, sname, title, imgsrc are act as custom attributes/props for Cards component so that it can be used again and again only by changing the content with the help of these props\n// ! clname is the cutom attribute to add class for differnt card its working fine if there is only one class but if there is more than 1 one class with this custom class clname won't work\n// ! can't find the reason to this as well as can't find the solution to use more than one class when using giving the name to class using props \n//* <h3 className= {props.clName} > {props.sname} </h3> <-- This works fine\n//* <h3 className= '{props.clName} category'> {props.sname} </h3> <-- This does not\n//*          2nd METHOD \n//*    To Make the code more simple we use array of object\n// in a diff file here it is (Seriesdata.jsx) we make an array of object and fill all details in array like in an API\n// then we call the value to our custom attribute or props using . operator \n// it gives the code simpler look\n// ! Important\n// the first card is done by normal custom attribute...\n// the other three are done by using array of objects..\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/src/App.jsx"],"names":["React","Cards","Seriesdata","App","imgsrc","title","sname","slink","clName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAGA,SAASC,GAAT,GAAe;AACX,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,MAAM,EAAC,mBADX;AAEA,QAAA,KAAK,EAAE,2BAFP;AAGA,QAAA,KAAK,EAAE,eAHP;AAIA,QAAA,KAAK,EAAE,2CAJP;AAKA,QAAA,MAAM,EAAE;AALR;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,KAAD;AACI,QAAA,MAAM,EAAED,UAAU,CAAC,CAAD,CAAV,CAAcE,MAD1B;AAEI,QAAA,KAAK,EAAEF,UAAU,CAAC,CAAD,CAAV,CAAcG,KAFzB;AAGI,QAAA,KAAK,EAAEH,UAAU,CAAC,CAAD,CAAV,CAAcI,KAHzB;AAII,QAAA,KAAK,EAAEJ,UAAU,CAAC,CAAD,CAAV,CAAcK,KAJzB;AAKI,QAAA,MAAM,EAAEL,UAAU,CAAC,CAAD,CAAV,CAAcM;AAL1B;AAAA;AAAA;AAAA;AAAA,cARJ,eAeI,QAAC,KAAD;AACI,QAAA,MAAM,EAAEN,UAAU,CAAC,CAAD,CAAV,CAAcE,MAD1B;AAEI,QAAA,KAAK,EAAEF,UAAU,CAAC,CAAD,CAAV,CAAcG,KAFzB;AAGI,QAAA,KAAK,EAAEH,UAAU,CAAC,CAAD,CAAV,CAAcI,KAHzB;AAII,QAAA,KAAK,EAAEJ,UAAU,CAAC,CAAD,CAAV,CAAcK,KAJzB;AAKI,QAAA,MAAM,EAAEL,UAAU,CAAC,CAAD,CAAV,CAAcM;AAL1B;AAAA;AAAA;AAAA;AAAA,cAfJ,eAsBI,QAAC,KAAD;AAEI,QAAA,MAAM,EAAEN,UAAU,CAAC,CAAD,CAAV,CAAcE,MAF1B;AAGI,QAAA,KAAK,EAAEF,UAAU,CAAC,CAAD,CAAV,CAAcG,KAHzB;AAII,QAAA,KAAK,EAAEH,UAAU,CAAC,CAAD,CAAV,CAAcI,KAJzB;AAKI,QAAA,KAAK,EAAEJ,UAAU,CAAC,CAAD,CAAV,CAAcK,KALzB;AAMI,QAAA,MAAM,EAAEL,UAAU,CAAC,CAAD,CAAV,CAAcM;AAN1B;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAsCH;;KAvCQL,G;AAyCT,eAAeA,GAAf,C,CAIA;AAEA;AACA;AACA;AACA;AAGA;AAKA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA","sourcesContent":["import React from 'react';\r\nimport Cards from './Cards';\r\nimport Seriesdata from './Seriesdata';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <h1 className='heading'> List of Top 5 Series in 2020.. </h1>\r\n\r\n            <div className='container'>\r\n                <Cards\r\n                    imgsrc='images/sex_ed.jpg'\r\n                title= 'A Netflix Original Series'\r\n                sname= 'Sex Education'\r\n                slink= 'https://www.netflix.com/in/title/80197526'\r\n                clName= 'netflix'\r\n                />\r\n                <Cards\r\n                    imgsrc={Seriesdata[1].imgsrc}\r\n                    title={Seriesdata[1].title}\r\n                    sname={Seriesdata[1].sname}\r\n                    slink={Seriesdata[1].slink}\r\n                    clName={Seriesdata[1].clName}\r\n                />\r\n                <Cards\r\n                    imgsrc={Seriesdata[2].imgsrc}\r\n                    title={Seriesdata[2].title}\r\n                    sname={Seriesdata[2].sname}\r\n                    slink={Seriesdata[2].slink}\r\n                    clName={Seriesdata[2].clName}\r\n                />\r\n                <Cards\r\n\r\n                    imgsrc={Seriesdata[3].imgsrc}\r\n                    title={Seriesdata[3].title}\r\n                    sname={Seriesdata[3].sname}\r\n                    slink={Seriesdata[3].slink}\r\n                    clName={Seriesdata[3].clName}\r\n                />\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n//*            About PROPS\r\n\r\n// * Like we can make our own tags in React which are known as components and can be use again and again\r\n// * then mostly all tags have attribute either it is className , id in h1,p tags or type,  placeholder in input tags\r\n// * it means we can make our custom attributes for components too . So in react that custom attributes are knows as 'props' which act as an object and the attributes inside the props objects can be \r\n// * accessed by . operator ie props.<attrName> where the component is made ie in Cards.jsx file\r\n\r\n\r\n//TODO   here slink, sname, title, imgsrc are act as custom attributes/props for Cards component so that it can be used again and again only by changing the content with the help of these props\r\n\r\n\r\n\r\n\r\n// ! clname is the cutom attribute to add class for differnt card its working fine if there is only one class but if there is more than 1 one class with this custom class clname won't work\r\n// ! can't find the reason to this as well as can't find the solution to use more than one class when using giving the name to class using props \r\n//* <h3 className= {props.clName} > {props.sname} </h3> <-- This works fine\r\n//* <h3 className= '{props.clName} category'> {props.sname} </h3> <-- This does not\r\n\r\n\r\n//*          2nd METHOD \r\n\r\n//*    To Make the code more simple we use array of object\r\n// in a diff file here it is (Seriesdata.jsx) we make an array of object and fill all details in array like in an API\r\n// then we call the value to our custom attribute or props using . operator \r\n// it gives the code simpler look\r\n\r\n\r\n// ! Important\r\n\r\n// the first card is done by normal custom attribute...\r\n// the other three are done by using array of objects.."]},"metadata":{},"sourceType":"module"}