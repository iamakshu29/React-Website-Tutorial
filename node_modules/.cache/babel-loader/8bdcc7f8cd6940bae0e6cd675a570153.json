{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Verma\\\\Desktop\\\\Practice\\\\react\\\\react_tut\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [fname, upName] = useState(\" \");\n  const [fullname, updateName] = useState(\" \");\n\n  const display = () => {\n    updateName(fname);\n  };\n\n  const inputEvent = event => {// console.log(event.target.value);\n    // upName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello \", fullname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your name\",\n      value: fname,\n      onChange: inputEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: display,\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"kmJkI2YP+uxqRCpzjYe9X5vXJUI=\");\n\n_c = App;\nexport default App; // use camelCase while declaring events like onClick onMouseEnter onDoubleClick  \n// and don't add () after the function name while calling the function in events \n// use hooks while changing the state with events ...\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/src/App.jsx"],"names":["React","useState","App","fname","upName","fullname","updateName","display","inputEvent","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,MAAR,IAAkBH,QAAQ,CAAC,GAAD,CAAhC;AACA,QAAM,CAACI,QAAD,EAAWC,UAAX,IAAyBL,QAAQ,CAAC,GAAD,CAAvC;;AAEA,QAAMM,OAAO,GAAG,MAAI;AAChBD,IAAAA,UAAU,CAACH,KAAD,CAAV;AACH,GAFD;;AAIA,QAAMK,UAAU,GAAIC,KAAD,IAAW,CAC1B;AACA;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA,2BAAWJ,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,iBAA/B;AAAiD,MAAA,KAAK,EAAEF,KAAxD;AAA+D,MAAA,QAAQ,EAAEK;AAAzE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAID,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAOH,CApBD;;GAAML,G;;KAAAA,G;AAuBN,eAAeA,GAAf,C,CAGA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst App = () => {\r\n    const [fname, upName] = useState(\" \");\r\n    const [fullname, updateName] = useState(\" \");\r\n\r\n    const display = ()=>{\r\n        updateName(fname);\r\n    };\r\n\r\n    const inputEvent = (event) => {\r\n        // console.log(event.target.value);\r\n        // upName(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Hello {fullname}</h1>\r\n            <input type='text' placeholder=\"Enter your name\" value={fname} onChange={inputEvent} />\r\n            <button type='submit' onClick = {display} >Hello</button>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default App;\r\n\r\n\r\n// use camelCase while declaring events like onClick onMouseEnter onDoubleClick  \r\n// and don't add () after the function name while calling the function in events \r\n// use hooks while changing the state with events ..."]},"metadata":{},"sourceType":"module"}