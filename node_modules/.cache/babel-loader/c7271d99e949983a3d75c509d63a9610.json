{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Verma\\\\Desktop\\\\Practice\\\\react\\\\react_tut\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let counting = 0;\n  const [count, setcount] = useState(counting);\n\n  const increment = () => {\n    setcount(counting + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"hF20GZLCgm+nMX+VaFTnj3/dB6g=\");\n\n_c = App;\nexport default App; //* Here we understand what useEffect Hook is\n// by using this hook, you tell react that your component needs to do something\n// after render. React will remember the func you passed call it later after performing DOM updates.\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/src/App.jsx"],"names":["React","useState","App","counting","count","setcount","increment"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,MAAIC,QAAQ,GAAG,CAAf;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,QAAD,CAAlC;;AACA,QAAMG,SAAS,GAAG,MAAI;AAClBD,IAAAA,QAAQ,CAACF,QAAQ,GAAC,CAAV,CAAR;AACH,GAFD;;AAGA,sBAEI;AAAA,4BACA;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBAFJ;AAOH,CAbD;;GAAMJ,G;;KAAAA,G;AAeN,eAAeA,GAAf,C,CAKA;AACA;AACA","sourcesContent":["import React, {useState} from 'react';\r\n\r\n\r\nconst App = () => {\r\n    let counting = 0;\r\n    const [count, setcount] = useState(counting);\r\n    const increment = ()=>{\r\n        setcount(counting+1);\r\n    }\r\n    return (\r\n\r\n        <>\r\n        <h1>{count}</h1>\r\n        <button onClick={increment}>click me</button>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n//* Here we understand what useEffect Hook is\r\n// by using this hook, you tell react that your component needs to do something\r\n// after render. React will remember the func you passed call it later after performing DOM updates."]},"metadata":{},"sourceType":"module"}