{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Verma\\\\Desktop\\\\Practice\\\\react\\\\react_tut\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // How to use JSX Expressions\n// jsut put the expression or the variable in between {} \n// AND\n// How to use TEMPLATE LITERALS ie ` ` backticks\n// const fname = \"Akshat\";\n// const lname = \"Verma\";\n// const brand = \"Apple\";\n// const choice = \"Macbook\";\n// const randy = Math.floor((Math.random())*6)+1;\n//             can also use date method\n// const currDate = new Date().toLocaleDateString();\n// const currTime = new Date().toLocaleTimeString();\n// ReactDOM.render(\n//   <>\n//   <h1>Hello my name is {fname}. </h1>\n//   <h1>hello my full name is {fname + \" \" + lname}. </h1>\n//   <p>My lucky number is {5+2} and {Math.floor((Math.random())*15)+11} </p>\n//   <p>We can aslo write it as {randy}. </p>\n//   <p> {` I like ${brand} ${choice}`}. </p>\n//   {/* template literals */}\n//   <p>{`Today's date is ${currDate}`}</p>\n//   <p>{`Current time is ${currTime}`}</p>\n//   </>,\n//   document.getElementById('root')\n// );\n// we can only use expression in b/w {}\n// we can't use statements like loop, if else... etc in b/w {}\n//                             JSX attributes in React\n// Properties of JSX element is JSX attribute like in anchor tag\n// href and target are JSX attributes \n// we cant told them html attribute bcoz they look like html but in real they are JSX elements\n// <a href = \"\", target = \"\" /> \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst img = 'dummy-imaage-2.png';\nReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"We are using the attributes here...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n    src: \"imaage.png\",\n    alt: \"dummy imaage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this)]\n}, void 0, true), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/src/index.js"],"names":["React","ReactDOM","img","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;AACI;AACJ;AAKA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,oBAAZ;AAEAD,QAAQ,CAACE,MAAT,eACI;AAAA,0BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,eAGA;AAAK,IAAA,GAAG,EAAG,YAAX;AAAwB,IAAA,GAAG,EAAG;AAA9B;AAAA;AAAA;AAAA;AAAA,UAHA;AAAA,gBADJ,EAMIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANJ","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// How to use JSX Expressions\n// jsut put the expression or the variable in between {} \n    // AND\n// How to use TEMPLATE LITERALS ie ` ` backticks\n\n\n\n\n// const fname = \"Akshat\";\n// const lname = \"Verma\";\n// const brand = \"Apple\";\n// const choice = \"Macbook\";\n// const randy = Math.floor((Math.random())*6)+1;\n\n//             can also use date method\n\n// const currDate = new Date().toLocaleDateString();\n// const currTime = new Date().toLocaleTimeString();\n\n// ReactDOM.render(\n//   <>\n//   <h1>Hello my name is {fname}. </h1>\n//   <h1>hello my full name is {fname + \" \" + lname}. </h1>\n//   <p>My lucky number is {5+2} and {Math.floor((Math.random())*15)+11} </p>\n//   <p>We can aslo write it as {randy}. </p>\n//   <p> {` I like ${brand} ${choice}`}. </p>\n//   {/* template literals */}\n\n//   <p>{`Today's date is ${currDate}`}</p>\n//   <p>{`Current time is ${currTime}`}</p>\n//   </>,\n//   document.getElementById('root')\n// );\n\n// we can only use expression in b/w {}\n// we can't use statements like loop, if else... etc in b/w {}\n\n\n\n//                             JSX attributes in React\n\n// Properties of JSX element is JSX attribute like in anchor tag\n// href and target are JSX attributes \n// we cant told them html attribute bcoz they look like html but in real they are JSX elements\n// <a href = \"\", target = \"\" /> \n\nconst img = 'dummy-imaage-2.png';\n\nReactDOM.render(\n    <>\n    <h1>We are using the attributes here...</h1>\n\n    <img src = \"imaage.png\" alt = 'dummy imaage' />\n    </>,\n    document.getElementById('root')\n  );\n  "]},"metadata":{},"sourceType":"module"}