{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Verma\\\\Desktop\\\\Practice\\\\react\\\\react_tut\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let counting = 0;\n  const [count, setcount] = useState(counting);\n  useEffect(() => {\n    alert('hi');\n  });\n\n  const increment = () => {\n    setcount(count + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"V3ipmOAZTiNg8639iHDePGAnVYc=\");\n\n_c = App;\nexport default App; //* Here we understand what useEffect Hook is\n// by using this hook, you tell react that your component needs to do something\n// after render. React will remember the func you passed call it later after performing DOM updates.\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/src/App.jsx"],"names":["React","useState","useEffect","App","counting","count","setcount","alert","increment"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,MAAIC,QAAQ,GAAG,CAAf;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,QAAD,CAAlC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAAC,IAAD,CAAL;AACC,GAFI,CAAT;;AAIA,QAAMC,SAAS,GAAG,MAAI;AAClBF,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACH,GAFD;;AAGA,sBAEI;AAAA,4BACA;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBAFJ;AAOH,CAjBD;;GAAML,G;;KAAAA,G;AAmBN,eAAeA,GAAf,C,CAKA;AACA;AACA","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\n\r\nconst App = () => {\r\n    let counting = 0;\r\n    const [count, setcount] = useState(counting);\r\n    useEffect(() => {\r\n        alert('hi');\r\n        });\r\n\r\n    const increment = ()=>{\r\n        setcount(count+1);\r\n    }\r\n    return (\r\n\r\n        <>\r\n        <h1>{count}</h1>\r\n        <button onClick={increment}>click me</button>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n//* Here we understand what useEffect Hook is\r\n// by using this hook, you tell react that your component needs to do something\r\n// after render. React will remember the func you passed call it later after performing DOM updates."]},"metadata":{},"sourceType":"module"}