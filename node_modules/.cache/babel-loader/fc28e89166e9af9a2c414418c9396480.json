{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Verma\\\\Desktop\\\\Practice\\\\react\\\\react_tut\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // How to use JSX Expressions\n// jsut put the expression or the variable in between {} \n// AND\n// How to use TEMPLATE LITERALS ie ` ` backticks\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fname = \"Akshat\";\nconst lname = \"Verma\";\nconst brand = \"Apple\";\nconst choice = \"Macbook\";\nconst randy = Math.floor(Math.random() * 6) + 1;\nReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Hello my name is \", fname, \". \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"hello my full name is \", fname + \" \" + lname]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"My lucky number is \", 5 + 2, \" and \", Math.floor(Math.random() * 15) + 11, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"We can aslo write it as \", randy]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" \", ` I like ${brand} ${choice}`]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this)]\n}, void 0, true), document.getElementById('root')); // we can only use expression in b/w {}\n// we can't use statements like loop, if else... etc in b/w {}","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/src/index.js"],"names":["React","ReactDOM","fname","lname","brand","choice","randy","Math","floor","random","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;AACI;AACJ;;;;AAEA,MAAMC,KAAK,GAAG,QAAd;AACA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,MAAM,GAAG,SAAf;AACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,EAAD,GAAgB,CAA3B,IAA8B,CAA5C;AACAR,QAAQ,CAACS,MAAT,eACE;AAAA,0BACA;AAAA,oCAAsBR,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,eAEA;AAAA,yCAA2BA,KAAK,GAAG,GAAR,GAAcC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,eAGA;AAAA,sCAAuB,IAAE,CAAzB,WAAiCI,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,EAAD,GAAgB,EAA3B,IAA+B,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,UAHA,eAIA;AAAA,2CAA4BH,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,UAJA,eAKA;AAAA,oBAAM,WAAUF,KAAM,IAAGC,MAAO,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,UALA;AAAA,gBADF,EAQEM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// How to use JSX Expressions\n// jsut put the expression or the variable in between {} \n    // AND\n// How to use TEMPLATE LITERALS ie ` ` backticks\n\nconst fname = \"Akshat\";\nconst lname = \"Verma\";\nconst brand = \"Apple\";\nconst choice = \"Macbook\";\nconst randy = Math.floor((Math.random())*6)+1;\nReactDOM.render(\n  <>\n  <h1>Hello my name is {fname}. </h1>\n  <h1>hello my full name is {fname + \" \" + lname}</h1>\n  <p>My lucky number is {5+2} and {Math.floor((Math.random())*15)+11} </p>\n  <p>We can aslo write it as {randy}</p>\n  <p> {` I like ${brand} ${choice}`}</p>\n  </>,\n  document.getElementById('root')\n);\n\n// we can only use expression in b/w {}\n// we can't use statements like loop, if else... etc in b/w {}\n\n\n\n"]},"metadata":{},"sourceType":"module"}