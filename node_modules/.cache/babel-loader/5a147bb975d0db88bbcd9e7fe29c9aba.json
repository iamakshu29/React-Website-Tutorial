{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Verma\\\\Desktop\\\\Practice\\\\react\\\\react_tut\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport Cards from './Cards';\nimport Seriesdata from './Seriesdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst favSeries = () => {\n  if (Seriesdata.clName === 'Netflix') {\n    return /*#__PURE__*/_jsxDEV(Cards, {\n      imgsrc: Seriesdata[0].imgsrc,\n      title: Seriesdata[0].title,\n      sname: Seriesdata[0].sname,\n      slink: Seriesdata[0].slink,\n      clName: Seriesdata[0].clName\n    }, Seriesdata[0].id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  }\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \" List of Top 5 Series in 2020.. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"favSeries\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\nexport default App; //*            About PROPS\n// * Like we can make our own tags in React which are known as components and can be use again and again\n// * then mostly all tags have attribute either it is className , id in h1,p tags or type,  placeholder in input tags\n// * it means we can make our custom attributes for components too . So in react that custom attributes are knows as 'props' which act as an object and the attributes inside the props objects can be \n// * accessed by . operator ie props.<attrName> where the component is made ie in Cards.jsx file\n//TODO   here slink, sname, title, imgsrc are act as custom attributes/props for Cards component so that it can be used again and again only by changing the content with the help of these props\n// ! clname is the cutom attribute to add class for differnt card its working fine if there is only one class but if there is more than 1 one class with this custom class clname won't work\n// ! can't find the reason to this as well as can't find the solution to use more than one class when using giving the name to class using props \n//* <h3 className= {props.clName} > {props.sname} </h3> <-- This works fine\n//* <h3 className= '{props.clName} category'> {props.sname} </h3> <-- This does not\n//*          2nd METHOD \n//*    To Make the code more simple we use array of object\n// in a diff file here it is (Seriesdata.jsx) we make an array of object and fill all details in array\n// then we call the value to our custom attribute using . operator  arrayName[0].<keyName>\n// ! Important\n// the first card is done by normal custom attribute...\n// the other three are done by using array of objects..\n//*              3rd Method\n//* To make the code more shorter and quicker we use map function of array \n//! React use map function and only in rare cases, it uses loop \n//* Basically map function works like a loop as it prints all tha values of an array\n// if there is simple array a = ['hi','bye','oyo'];\n// const newArr = currArr.map(function(value,index,array){\n// console.log(value,index,array);\n// })\n// if there is an array if object like the Seriesdata\n// const newArr = currArr.map(function(value,index,array){\n// console.log(value.<keyname>,index,array);\n// })\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/src/App.jsx"],"names":["React","Cards","Seriesdata","favSeries","clName","imgsrc","title","sname","slink","id","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,MAAID,UAAU,CAACE,MAAX,KAAsB,SAA1B,EAAqC;AACjC,wBACI,QAAC,KAAD;AAEI,MAAA,MAAM,EAAEF,UAAU,CAAC,CAAD,CAAV,CAAcG,MAF1B;AAGI,MAAA,KAAK,EAAEH,UAAU,CAAC,CAAD,CAAV,CAAcI,KAHzB;AAII,MAAA,KAAK,EAAEJ,UAAU,CAAC,CAAD,CAAV,CAAcK,KAJzB;AAKI,MAAA,KAAK,EAAEL,UAAU,CAAC,CAAD,CAAV,CAAcM,KALzB;AAMI,MAAA,MAAM,EAAEN,UAAU,CAAC,CAAD,CAAV,CAAcE;AAN1B,OACSF,UAAU,CAAC,CAAD,CAAV,CAAcO,EADvB;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;AACJ,CAbD;;AAeA,SAASC,GAAT,GAAe;AACX,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAoBI;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA,kBADJ;AAwBH;;KAzBQA,G;AA2BT,eAAeA,GAAf,C,CAIA;AAEA;AACA;AACA;AACA;AAGA;AAKA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACI;AACJ;AAEA;AACA;AACI;AACJ","sourcesContent":["import React from 'react';\r\nimport Cards from './Cards';\r\nimport Seriesdata from './Seriesdata';\r\n\r\nconst favSeries = () => {\r\n    if (Seriesdata.clName === 'Netflix') {\r\n        return (\r\n            <Cards\r\n                key={Seriesdata[0].id}\r\n                imgsrc={Seriesdata[0].imgsrc}\r\n                title={Seriesdata[0].title}\r\n                sname={Seriesdata[0].sname}\r\n                slink={Seriesdata[0].slink}\r\n                clName={Seriesdata[0].clName}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <h1 className='heading'> List of Top 5 Series in 2020.. </h1>\r\n\r\n            {/* <div className='container'>\r\n                {\r\n                    Seriesdata.map((value) => {\r\n                        return (\r\n                            <Cards\r\n                                key={value.id}\r\n                                imgsrc={value.imgsrc}\r\n                                title={value.title}\r\n                                sname={value.sname}\r\n                                slink={value.slink}\r\n                                clName={value.clName}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </div> */}\r\n\r\n            <favSeries />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n//*            About PROPS\r\n\r\n// * Like we can make our own tags in React which are known as components and can be use again and again\r\n// * then mostly all tags have attribute either it is className , id in h1,p tags or type,  placeholder in input tags\r\n// * it means we can make our custom attributes for components too . So in react that custom attributes are knows as 'props' which act as an object and the attributes inside the props objects can be \r\n// * accessed by . operator ie props.<attrName> where the component is made ie in Cards.jsx file\r\n\r\n\r\n//TODO   here slink, sname, title, imgsrc are act as custom attributes/props for Cards component so that it can be used again and again only by changing the content with the help of these props\r\n\r\n\r\n\r\n\r\n// ! clname is the cutom attribute to add class for differnt card its working fine if there is only one class but if there is more than 1 one class with this custom class clname won't work\r\n// ! can't find the reason to this as well as can't find the solution to use more than one class when using giving the name to class using props \r\n//* <h3 className= {props.clName} > {props.sname} </h3> <-- This works fine\r\n//* <h3 className= '{props.clName} category'> {props.sname} </h3> <-- This does not\r\n\r\n\r\n//*          2nd METHOD \r\n\r\n//*    To Make the code more simple we use array of object\r\n// in a diff file here it is (Seriesdata.jsx) we make an array of object and fill all details in array\r\n// then we call the value to our custom attribute using . operator  arrayName[0].<keyName>\r\n\r\n\r\n// ! Important\r\n\r\n// the first card is done by normal custom attribute...\r\n// the other three are done by using array of objects..\r\n\r\n//*              3rd Method\r\n\r\n//* To make the code more shorter and quicker we use map function of array \r\n//! React use map function and only in rare cases, it uses loop \r\n//* Basically map function works like a loop as it prints all tha values of an array\r\n\r\n// if there is simple array a = ['hi','bye','oyo'];\r\n// const newArr = currArr.map(function(value,index,array){\r\n    // console.log(value,index,array);\r\n// })\r\n\r\n// if there is an array if object like the Seriesdata\r\n// const newArr = currArr.map(function(value,index,array){\r\n    // console.log(value.<keyname>,index,array);\r\n// })"]},"metadata":{},"sourceType":"module"}