{"ast":null,"code":"/**\n * @author Matthew Caruana Galizia <m@m.cg>\n * @license MIT: http://mattcg.mit-license.org/\n * @copyright Copyright (c) 2013, Matthew Caruana Galizia\n */\n\n/*jshint node:true*/\n'use strict';\n\nvar index = require('language-subtag-registry/data/json/index');\n\nvar registry = require('language-subtag-registry/data/json/registry');\n\nvar Subtag = require('./Subtag');\n\nmodule.exports = Tag;\nTag.ERR_DEPRECATED = 1;\nTag.ERR_NO_LANGUAGE = 2;\nTag.ERR_UNKNOWN = 3;\nTag.ERR_TOO_LONG = 4;\nTag.ERR_EXTRA_REGION = 5;\nTag.ERR_EXTRA_EXTLANG = 6;\nTag.ERR_EXTRA_SCRIPT = 7;\nTag.ERR_DUPLICATE_VARIANT = 8;\nTag.ERR_WRONG_ORDER = 9;\nTag.ERR_SUPPRESS_SCRIPT = 10;\nTag.ERR_SUBTAG_DEPRECATED = 11;\nTag.ERR_EXTRA_LANGUAGE = 12;\n\nfunction Tag(tag) {\n  var types; // Lowercase for consistency (case is only a formatting convention, not a standard requirement).\n\n  tag = tag.trim().toLowerCase();\n  this.data = {};\n  this.data.tag = tag; // Check if the input tag is grandfathered or redundant.\n\n  types = index[tag];\n\n  if (types && (types.grandfathered || types.redundant)) {\n    this.data.record = registry[types.grandfathered || types.redundant];\n  }\n}\n\nTag.prototype.preferred = function () {\n  var preferred = this.data.record['Preferred-Value'];\n\n  if (preferred) {\n    return new Tag(preferred);\n  }\n\n  return null;\n};\n\nTag.prototype.subtags = function () {\n  var codes,\n      data = this.data,\n      subtags = []; // No subtags if the tag is grandfathered.\n\n  if (data.record && this.type() === 'grandfathered') {\n    return subtags;\n  }\n\n  codes = data.tag.split('-');\n\n  if (!codes.length) {\n    return subtags;\n  } // Try and find the language tag.\n\n\n  codes.some(function (code, i) {\n    var types; // Singletons and anything after are unhandled.\n\n    if (code.length < 2) {\n      return true; // Stop the loop (stop processing after a singleton).\n    }\n\n    types = index[code]; // Check for non-existent tag.\n\n    if (!types) {\n      return; // Skip to the next item.\n    } // Check against undefined because value could be 0.\n    // Language subtags may only appear at the beginning of the tag, otherwise the subtag type is indeterminate.\n\n\n    if (0 === i && undefined !== types.language) {\n      subtags.push(new Subtag(code, 'language'));\n      return;\n    }\n\n    switch (code.length) {\n      case 2:\n        // Should be a region.\n        if (types.region) {\n          subtags.push(new Subtag(code, 'region')); // Error case: language subtag in the wrong place.\n        } else if (types.language) {\n          subtags.push(new Subtag(code, 'language'));\n        }\n\n        break;\n\n      case 3:\n        // Could be a numeric region code e.g. '001' for 'World'.\n        if (types.region) {\n          subtags.push(new Subtag(code, 'region'));\n        } else if (types.extlang) {\n          subtags.push(new Subtag(code, 'extlang')); // Error case: language subtag in the wrong place.\n        } else if (types.language) {\n          subtags.push(new Subtag(code, 'language'));\n        }\n\n        break;\n\n      case 4:\n        // Could be a numeric variant.\n        if (types.variant) {\n          subtags.push(new Subtag(code, 'variant'));\n        } else if (types.script) {\n          subtags.push(new Subtag(code, 'script'));\n        }\n\n        break;\n\n      default:\n        // Should be a variant.\n        if (types.variant) {\n          subtags.push(new Subtag(code, 'variant'));\n        }\n\n        break;\n    }\n  });\n  return subtags;\n};\n\nTag.prototype.language = function () {\n  return this.find('language');\n};\n\nTag.prototype.region = function () {\n  return this.find('region');\n};\n\nTag.prototype.script = function () {\n  return this.find('script');\n};\n\nTag.prototype.find = function (type) {\n  var i,\n      l,\n      subtag,\n      subtags = this.subtags();\n\n  for (i = 0, l = subtags.length; i < l; i++) {\n    subtag = subtags[i];\n\n    if (subtag.type() === type) {\n      return subtag;\n    }\n  }\n};\n\nTag.prototype.valid = function () {\n  return this.errors().length < 1;\n};\n\nTag.prototype.errors = function () {\n  var error,\n      subtags,\n      data = this.data,\n      errors = [];\n\n  error = function (code, subtag) {\n    var err, message;\n\n    switch (code) {\n      case Tag.ERR_DEPRECATED:\n        message = 'The tag \\'' + data.tag + '\\' is deprecated.'; // Note that a record that contains a 'Deprecated' field and no corresponding 'Preferred-Value' field has no replacement mapping (RFC 5646 section 3.1.6).\n\n        if (data.record['Preferred-Value']) {\n          message += ' Use \\'' + data.record['Preferred-Value'] + '\\' instead.';\n        }\n\n        break;\n\n      case Tag.ERR_SUBTAG_DEPRECATED:\n        message = 'The subtag \\'' + subtag + '\\' is deprecated.';\n        break;\n\n      case Tag.ERR_NO_LANGUAGE:\n        if (!data.tag) {\n          message = 'Empty tag.';\n        } else {\n          message = 'Missing language tag in \\'' + data.tag + '\\'.';\n        }\n\n        break;\n\n      case Tag.ERR_UNKNOWN:\n        message = 'Unknown code \\'' + subtag + '\\'';\n        break;\n\n      case Tag.ERR_TOO_LONG:\n        message = 'The private-use subtag \\'' + subtag + '\\' is too long.';\n        break;\n\n      case Tag.ERR_EXTRA_LANGUAGE:\n      case Tag.ERR_EXTRA_EXTLANG:\n      case Tag.ERR_EXTRA_REGION:\n      case Tag.ERR_EXTRA_SCRIPT:\n        message = 'Extra ' + subtag.type() + ' subtag \\'' + subtag + '\\' found.';\n        break;\n\n      case Tag.ERR_DUPLICATE_VARIANT:\n        message = 'Duplicate variant subtag \\'' + subtag + '\\' found.';\n        break;\n\n      case Tag.ERR_WRONG_ORDER:\n        message = 'The subtag \\'' + subtag[0] + '\\' should not appear before \\'' + subtag[1] + '\\'.';\n        break;\n\n      case Tag.ERR_SUPPRESS_SCRIPT:\n        message = 'The script subtag \\'' + subtag + '\\' is the same as the language suppress-script.';\n        break;\n    }\n\n    err = new Error(message);\n    err.code = code;\n    err.tag = data.tag;\n    err.subtag = subtag;\n    errors.push(err);\n  }; // Check if the tag is grandfathered and if the grandfathered tag is deprecated (e.g. no-nyn).\n\n\n  if (data.record) {\n    if (data.record.Deprecated) {\n      error(Tag.ERR_DEPRECATED);\n    } // Only check every subtag if the tag is not explicitly listed as grandfathered or redundant.\n\n\n    return errors;\n  } // Check that all subtag codes are meaningful.\n\n\n  data.tag.split('-').some(function (code, i, codes) {\n    var types; // Ignore anything after a singleton.\n\n    if (code.length < 2) {\n      // Check that each private-use subtag is within the maximum allowed length.\n      codes.slice(i).forEach(function (code) {\n        if (code.length > 8) {\n          error(Tag.ERR_TOO_LONG, code);\n        }\n      });\n      return true;\n    }\n\n    types = index[code];\n\n    if (!types) {\n      error(Tag.ERR_UNKNOWN, code);\n    }\n\n    return false; // Continue to the next item.\n  }); // Check that first tag is a language tag.\n\n  subtags = this.subtags();\n\n  if (!subtags.length || 'language' !== subtags[0].type()) {\n    error(Tag.ERR_NO_LANGUAGE);\n    return errors;\n  } // Check for more than one of some types and for deprecation.\n\n\n  subtags.forEach(function (subtag, i) {\n    var type = subtag.type(),\n        language,\n        script,\n        found = this;\n\n    if (subtag.deprecated()) {\n      error(Tag.ERR_SUBTAG_DEPRECATED, subtag);\n    }\n\n    if (found[type]) {\n      found[type].push(subtag);\n    }\n\n    switch (type) {\n      case 'language':\n        if (found.language.length > 1) {\n          error(Tag.ERR_EXTRA_LANGUAGE, subtag);\n        }\n\n        break;\n\n      case 'region':\n        if (found.region.length > 1) {\n          error(Tag.ERR_EXTRA_REGION, subtag);\n        }\n\n        break;\n\n      case 'extlang':\n        if (found.extlang.length > 1) {\n          error(Tag.ERR_EXTRA_EXTLANG, subtag);\n        }\n\n        break;\n\n      case 'script':\n        if (found.script.length > 1) {\n          error(Tag.ERR_EXTRA_SCRIPT, subtag); // Check if script is same as language suppress-script.\n        } else {\n          language = subtags[0];\n\n          if ('language' === language.type()) {\n            script = language.script();\n\n            if (script && script.format() === subtag.format()) {\n              error(Tag.ERR_SUPPRESS_SCRIPT, subtag);\n            }\n          }\n        }\n\n        break;\n\n      case 'variant':\n        if (found.variant.length > 1 && found.variant.some(function (variant) {\n          return variant.format() === subtag.format();\n        })) {\n          error(Tag.ERR_DUPLICATE_VARIANT, subtag);\n        }\n\n    }\n  }, {\n    language: [],\n    extlang: [],\n    variant: [],\n    script: [],\n    region: []\n  }); // Check for correct order.\n\n  subtags.forEach(function (subtag, i, subtags) {\n    var priority = this,\n        next = subtags[i + 1];\n\n    if (next && priority[subtag.type()] > priority[next.type()]) {\n      error(Tag.ERR_WRONG_ORDER, [subtag, next]);\n    }\n  }, {\n    language: 4,\n    extlang: 5,\n    script: 6,\n    region: 7,\n    variant: 8\n  });\n  return errors;\n};\n\nTag.prototype.type = function () {\n  var record = this.data.record;\n\n  if (record) {\n    return record.Type;\n  }\n\n  return 'tag';\n};\n\nTag.prototype.added = function () {\n  var record = this.data.record;\n  return record && record.Added;\n};\n\nTag.prototype.deprecated = function () {\n  var record = this.data.record;\n  return record && record.Deprecated;\n};\n\nTag.prototype.descriptions = function () {\n  var record = this.data.record;\n\n  if (record && record.Description) {\n    return record.Description;\n  }\n\n  return [];\n};\n\nTag.prototype.format = function () {\n  var tag = this.data.tag; // Format according to algorithm defined in RFC 5646 section 2.1.1.\n\n  return tag.split('-').reduce(function (p, c, i, a) {\n    if (i === 0) {\n      return c;\n    }\n\n    if (a[i - 1].length === 1) {\n      return p + '-' + c;\n    }\n\n    switch (c.length) {\n      case 2:\n        return p + '-' + c.toUpperCase();\n\n      case 4:\n        return p + '-' + c[0].toUpperCase() + c.substr(1);\n    }\n\n    return p + '-' + c;\n  });\n};","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/node_modules/language-tags/lib/Tag.js"],"names":["index","require","registry","Subtag","module","exports","Tag","ERR_DEPRECATED","ERR_NO_LANGUAGE","ERR_UNKNOWN","ERR_TOO_LONG","ERR_EXTRA_REGION","ERR_EXTRA_EXTLANG","ERR_EXTRA_SCRIPT","ERR_DUPLICATE_VARIANT","ERR_WRONG_ORDER","ERR_SUPPRESS_SCRIPT","ERR_SUBTAG_DEPRECATED","ERR_EXTRA_LANGUAGE","tag","types","trim","toLowerCase","data","grandfathered","redundant","record","prototype","preferred","subtags","codes","type","split","length","some","code","i","undefined","language","push","region","extlang","variant","script","find","l","subtag","valid","errors","error","err","message","Error","Deprecated","slice","forEach","found","deprecated","format","priority","next","Type","added","Added","descriptions","Description","reduce","p","c","a","toUpperCase","substr"],"mappings":"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","sourcesContent":["/**\n * @author Matthew Caruana Galizia <m@m.cg>\n * @license MIT: http://mattcg.mit-license.org/\n * @copyright Copyright (c) 2013, Matthew Caruana Galizia\n */\n\n/*jshint node:true*/\n\n'use strict';\n\nvar index = require('language-subtag-registry/data/json/index');\nvar registry = require('language-subtag-registry/data/json/registry');\n\nvar Subtag = require('./Subtag');\n\nmodule.exports = Tag;\n\nTag.ERR_DEPRECATED = 1;\nTag.ERR_NO_LANGUAGE = 2;\nTag.ERR_UNKNOWN = 3;\nTag.ERR_TOO_LONG = 4;\nTag.ERR_EXTRA_REGION = 5;\nTag.ERR_EXTRA_EXTLANG = 6;\nTag.ERR_EXTRA_SCRIPT = 7;\nTag.ERR_DUPLICATE_VARIANT = 8;\nTag.ERR_WRONG_ORDER = 9;\nTag.ERR_SUPPRESS_SCRIPT = 10;\nTag.ERR_SUBTAG_DEPRECATED = 11;\nTag.ERR_EXTRA_LANGUAGE = 12;\n\nfunction Tag(tag) {\n\tvar types;\n\n\t// Lowercase for consistency (case is only a formatting convention, not a standard requirement).\n\ttag = tag.trim().toLowerCase();\n\n\tthis.data = {};\n\tthis.data.tag = tag;\n\n\t// Check if the input tag is grandfathered or redundant.\n\ttypes = index[tag];\n\tif (types && (types.grandfathered || types.redundant)) {\n\t\tthis.data.record = registry[types.grandfathered || types.redundant];\n\t}\n}\n\nTag.prototype.preferred = function() {\n\tvar preferred = this.data.record['Preferred-Value'];\n\n\tif (preferred) {\n\t\treturn new Tag(preferred);\n\t}\n\n\treturn null;\n};\n\nTag.prototype.subtags = function() {\n\tvar codes, data = this.data, subtags = [];\n\n\t// No subtags if the tag is grandfathered.\n\tif (data.record && this.type() === 'grandfathered') {\n\t\treturn subtags;\n\t}\n\n\tcodes = data.tag.split('-');\n\tif (!codes.length) {\n\t\treturn subtags;\n\t}\n\n\t// Try and find the language tag.\n\tcodes.some(function(code, i) {\n\t\tvar types;\n\n\t\t// Singletons and anything after are unhandled.\n\t\tif (code.length < 2) {\n\t\t\treturn true; // Stop the loop (stop processing after a singleton).\n\t\t}\n\n\t\ttypes = index[code];\n\n\t\t// Check for non-existent tag.\n\t\tif (!types) {\n\t\t\treturn; // Skip to the next item.\n\t\t}\n\n\t\t// Check against undefined because value could be 0.\n\t\t// Language subtags may only appear at the beginning of the tag, otherwise the subtag type is indeterminate.\n\t\tif (0 === i && undefined !== types.language) {\n\t\t\tsubtags.push(new Subtag(code, 'language'));\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (code.length) {\n\t\tcase 2:\n\n\t\t\t// Should be a region.\n\t\t\tif (types.region) {\n\t\t\t\tsubtags.push(new Subtag(code, 'region'));\n\n\t\t\t// Error case: language subtag in the wrong place.\n\t\t\t} else if (types.language) {\n\t\t\t\tsubtags.push(new Subtag(code, 'language'));\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 3:\n\n\t\t\t// Could be a numeric region code e.g. '001' for 'World'.\n\t\t\tif (types.region) {\n\t\t\t\tsubtags.push(new Subtag(code, 'region'));\n\t\t\t} else if (types.extlang) {\n\t\t\t\tsubtags.push(new Subtag(code, 'extlang'));\n\n\t\t\t// Error case: language subtag in the wrong place.\n\t\t\t} else if (types.language) {\n\t\t\t\tsubtags.push(new Subtag(code, 'language'));\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 4:\n\n\t\t\t// Could be a numeric variant.\n\t\t\tif (types.variant) {\n\t\t\t\tsubtags.push(new Subtag(code, 'variant'));\n\t\t\t} else if (types.script) {\n\t\t\t\tsubtags.push(new Subtag(code, 'script'));\n\t\t\t}\n\n\t\t\tbreak;\n\t\tdefault:\n\n\t\t\t// Should be a variant.\n\t\t\tif (types.variant) {\n\t\t\t\tsubtags.push(new Subtag(code, 'variant'));\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\t});\n\n\treturn subtags;\n};\n\nTag.prototype.language = function() {\n\treturn this.find('language');\n};\n\nTag.prototype.region = function() {\n\treturn this.find('region');\n};\n\nTag.prototype.script = function() {\n\treturn this.find('script');\n};\n\nTag.prototype.find = function(type) {\n\tvar i, l, subtag, subtags = this.subtags();\n\n\tfor (i = 0, l = subtags.length; i < l; i++) {\n\t\tsubtag = subtags[i];\n\n\t\tif (subtag.type() === type) {\n\t\t\treturn subtag;\n\t\t}\n\t}\n};\n\nTag.prototype.valid = function() {\n\treturn this.errors().length < 1;\n};\n\nTag.prototype.errors = function() {\n\tvar error, subtags, data = this.data, errors = [];\n\n\terror = function(code, subtag) {\n\t\tvar err, message;\n\n\t\tswitch (code) {\n\t\tcase Tag.ERR_DEPRECATED:\n\t\t\tmessage = 'The tag \\'' + data.tag + '\\' is deprecated.';\n\n\t\t\t// Note that a record that contains a 'Deprecated' field and no corresponding 'Preferred-Value' field has no replacement mapping (RFC 5646 section 3.1.6).\n\t\t\tif (data.record['Preferred-Value']) {\n\t\t\t\tmessage += ' Use \\'' + data.record['Preferred-Value'] + '\\' instead.';\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase Tag.ERR_SUBTAG_DEPRECATED:\n\t\t\tmessage = 'The subtag \\'' + subtag + '\\' is deprecated.';\n\t\t\tbreak;\n\t\tcase Tag.ERR_NO_LANGUAGE:\n\t\t\tif (!data.tag) {\n\t\t\t\tmessage = 'Empty tag.';\n\t\t\t} else {\n\t\t\t\tmessage = 'Missing language tag in \\'' + data.tag + '\\'.';\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase Tag.ERR_UNKNOWN:\n\t\t\tmessage = 'Unknown code \\'' + subtag + '\\'';\n\t\t\tbreak;\n\t\tcase Tag.ERR_TOO_LONG:\n\t\t\tmessage = 'The private-use subtag \\'' + subtag + '\\' is too long.';\n\t\t\tbreak;\n\t\tcase Tag.ERR_EXTRA_LANGUAGE:\n\t\tcase Tag.ERR_EXTRA_EXTLANG:\n\t\tcase Tag.ERR_EXTRA_REGION:\n\t\tcase Tag.ERR_EXTRA_SCRIPT:\n\t\t\tmessage = 'Extra ' + subtag.type() + ' subtag \\'' + subtag + '\\' found.';\n\t\t\tbreak;\n\t\tcase Tag.ERR_DUPLICATE_VARIANT:\n\t\t\tmessage = 'Duplicate variant subtag \\'' + subtag + '\\' found.';\n\t\t\tbreak;\n\t\tcase Tag.ERR_WRONG_ORDER:\n\t\t\tmessage = 'The subtag \\'' + subtag[0] + '\\' should not appear before \\'' + subtag[1] + '\\'.';\n\t\t\tbreak;\n\t\tcase Tag.ERR_SUPPRESS_SCRIPT:\n\t\t\tmessage = 'The script subtag \\'' + subtag + '\\' is the same as the language suppress-script.';\n\t\t\tbreak;\n\t\t}\n\n\t\terr = new Error(message);\n\t\terr.code = code;\n\t\terr.tag = data.tag;\n\t\terr.subtag = subtag;\n\t\terrors.push(err);\n\t};\n\n\t// Check if the tag is grandfathered and if the grandfathered tag is deprecated (e.g. no-nyn).\n\tif (data.record) {\n\t\tif (data.record.Deprecated) {\n\t\t\terror(Tag.ERR_DEPRECATED);\n\t\t}\n\n\t\t// Only check every subtag if the tag is not explicitly listed as grandfathered or redundant.\n\t\treturn errors;\n\t}\n\n\t// Check that all subtag codes are meaningful.\n\tdata.tag.split('-').some(function(code, i, codes) {\n\t\tvar types;\n\n\t\t// Ignore anything after a singleton.\n\t\tif (code.length < 2) {\n\n\t\t\t// Check that each private-use subtag is within the maximum allowed length.\n\t\t\tcodes.slice(i).forEach(function(code) {\n\t\t\t\tif (code.length > 8) {\n\t\t\t\t\terror(Tag.ERR_TOO_LONG, code);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn true;\n\t\t}\n\n\t\ttypes = index[code];\n\t\tif (!types) {\n\t\t\terror(Tag.ERR_UNKNOWN, code);\n\t\t}\n\n\t\treturn false; // Continue to the next item.\n\t});\n\n\t// Check that first tag is a language tag.\n\tsubtags = this.subtags();\n\tif (!subtags.length || 'language' !== subtags[0].type()) {\n\t\terror(Tag.ERR_NO_LANGUAGE);\n\t\treturn errors;\n\t}\n\n\t// Check for more than one of some types and for deprecation.\n\tsubtags.forEach(function(subtag, i) {\n\t\tvar type = subtag.type(), language, script, found = this;\n\n\t\tif (subtag.deprecated()) {\n\t\t\terror(Tag.ERR_SUBTAG_DEPRECATED, subtag);\n\t\t}\n\n\t\tif (found[type]) {\n\t\t\tfound[type].push(subtag);\n\t\t}\n\n\t\tswitch (type) {\n\t\tcase 'language':\n\t\t\tif (found.language.length > 1) {\n\t\t\t\terror(Tag.ERR_EXTRA_LANGUAGE, subtag);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 'region':\n\t\t\tif (found.region.length > 1) {\n\t\t\t\terror(Tag.ERR_EXTRA_REGION, subtag);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 'extlang':\n\t\t\tif (found.extlang.length > 1) {\n\t\t\t\terror(Tag.ERR_EXTRA_EXTLANG, subtag);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 'script':\n\t\t\tif (found.script.length > 1) {\n\t\t\t\terror(Tag.ERR_EXTRA_SCRIPT, subtag);\n\n\t\t\t// Check if script is same as language suppress-script.\n\t\t\t} else {\n\t\t\t\tlanguage = subtags[0];\n\t\t\t\tif ('language' === language.type()) {\n\t\t\t\t\tscript = language.script();\n\t\t\t\t\tif (script && script.format() === subtag.format()) {\n\t\t\t\t\t\terror(Tag.ERR_SUPPRESS_SCRIPT, subtag);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 'variant':\n\t\t\tif (found.variant.length > 1 && found.variant.some(function(variant) {\n\t\t\t\treturn variant.format() === subtag.format();\n\t\t\t})) {\n\t\t\t\terror(Tag.ERR_DUPLICATE_VARIANT, subtag);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tlanguage: [],\n\t\textlang: [],\n\t\tvariant: [],\n\t\tscript: [],\n\t\tregion: []\n\t});\n\n\t// Check for correct order.\n\tsubtags.forEach(function(subtag, i, subtags) {\n\t\tvar priority = this, next = subtags[i + 1];\n\n\t\tif (next && priority[subtag.type()] > priority[next.type()]) {\n\t\t\terror(Tag.ERR_WRONG_ORDER, [subtag, next]);\n\t\t}\n\t}, {\n\t\tlanguage: 4,\n\t\textlang: 5,\n\t\tscript: 6,\n\t\tregion: 7,\n\t\tvariant: 8\n\t});\n\n\treturn errors;\n};\n\nTag.prototype.type = function() {\n\tvar record = this.data.record;\n\n\tif (record) {\n\t\treturn record.Type;\n\t}\n\n\treturn 'tag';\n};\n\nTag.prototype.added = function() {\n\tvar record = this.data.record;\n\n\treturn record && record.Added;\n};\n\nTag.prototype.deprecated = function() {\n\tvar record = this.data.record;\n\n\treturn record && record.Deprecated;\n};\n\nTag.prototype.descriptions = function() {\n\tvar record = this.data.record;\n\n\tif (record && record.Description) {\n\t\treturn record.Description;\n\t}\n\n\treturn [];\n};\n\nTag.prototype.format = function() {\n\tvar tag = this.data.tag;\n\n\t// Format according to algorithm defined in RFC 5646 section 2.1.1.\n\treturn tag.split('-').reduce(function(p, c, i, a) {\n\t\tif (i === 0) {\n\t\t\treturn c;\n\t\t}\n\n\t\tif (a[i - 1].length === 1) {\n\t\t\treturn p + '-' + c;\n\t\t}\n\n\t\tswitch (c.length) {\n\t\tcase 2:\n\t\t\treturn p + '-' + c.toUpperCase();\n\t\tcase 4:\n\t\t\treturn p + '-' + c[0].toUpperCase() + c.substr(1);\n\t\t}\n\n\t\treturn p + '-' + c;\n\t});\n};\n"]},"metadata":{},"sourceType":"script"}