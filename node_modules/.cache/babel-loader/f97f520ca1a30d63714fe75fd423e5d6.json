{"ast":null,"code":"/**\n * @author Matthew Caruana Galizia <m@m.cg>\n * @license MIT: http://mattcg.mit-license.org/\n * @copyright Copyright (c) 2013, Matthew Caruana Galizia\n */\n\n/*jshint node:true*/\n'use strict';\n\nvar Tag = require('./Tag');\n\nvar Subtag = require('./Subtag');\n\nvar index = require('language-subtag-registry/data/json/index');\n\nvar registry = require('language-subtag-registry/data/json/registry');\n\nvar tags = function (tag) {\n  return new Tag(tag);\n};\n\nmodule.exports = tags;\n\ntags.check = function (tag) {\n  return new Tag(tag).valid();\n};\n\ntags.types = function (subtag) {\n  var types = index[subtag];\n\n  if (!types) {\n    return [];\n  }\n\n  return Object.keys(types).filter(function (type) {\n    return type !== 'grandfathered' && type !== 'redundant';\n  });\n};\n\ntags.subtags = function (subtags) {\n  var result = [];\n\n  if (!Array.isArray(subtags)) {\n    subtags = [subtags];\n  }\n\n  subtags.forEach(function (subtag) {\n    tags.types(subtag).forEach(function (type) {\n      result.push(new Subtag(subtag, type));\n    });\n  });\n  return result;\n};\n\ntags.filter = function (subtags) {\n  return subtags.filter(function (subtag) {\n    return !tags.types(subtag).length;\n  });\n};\n\ntags.search = function (query, all) {\n  var test;\n\n  if ('function' === typeof query.test) {\n    test = function (description) {\n      return query.test(description);\n    }; // If the query is all lowercase, make a case-insensitive match.\n\n  } else if (query.toLowerCase() === query) {\n    test = function (description) {\n      return -1 !== description.toLowerCase().indexOf(query);\n    };\n  } else {\n    test = function (description) {\n      return -1 !== description.indexOf(query);\n    };\n  }\n\n  return registry.filter(function (record) {\n    if (!record.Subtag && !all) {\n      return false;\n    }\n\n    return record.Description.some(test); // Sort by matched description string length.\n    // This is a quick way to push precise matches towards the top.\n  }).sort(function (a, b) {\n    return Math.min.apply(Math, a.Description.filter(test).map(function (description) {\n      return description.length;\n    })) - Math.min.apply(Math, b.Description.filter(test).map(function (description) {\n      return description.length;\n    }));\n  }).map(function (record) {\n    if (record.Subtag) {\n      return new Subtag(record.Subtag, record.Type);\n    }\n\n    return new Tag(record.Tag);\n  });\n};\n\ntags.languages = function (macrolanguage) {\n  var i,\n      l,\n      record,\n      results = [];\n  macrolanguage = macrolanguage.toLowerCase();\n\n  if (!require('language-subtag-registry/data/json/macrolanguage')[macrolanguage]) {\n    throw new Error('\\'' + macrolanguage + '\\' is not a macrolanguage.');\n  }\n\n  for (i = 0, l = registry.length; i < l; i++) {\n    record = registry[i];\n\n    if (record.Macrolanguage === macrolanguage) {\n      results.push(new Subtag(record.Subtag, record.Type));\n    }\n  }\n\n  return results;\n};\n\ntags.language = function (subtag) {\n  return tags.type(subtag, 'language');\n};\n\ntags.region = function (subtag) {\n  return tags.type(subtag, 'region');\n};\n\ntags.type = function (subtag, type) {\n  var types = index[subtag.toLowerCase()];\n\n  if (types && types[type]) {\n    return new Subtag(subtag, type);\n  }\n\n  return null;\n};\n\ntags.date = function () {\n  return require('language-subtag-registry/data/json/meta')['File-Date'];\n};","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/node_modules/language-tags/lib/index.js"],"names":["Tag","require","Subtag","index","registry","tags","tag","module","exports","check","valid","types","subtag","Object","keys","filter","type","subtags","result","Array","isArray","forEach","push","length","search","query","all","test","description","toLowerCase","indexOf","record","Description","some","sort","a","b","Math","min","apply","map","Type","languages","macrolanguage","i","l","results","Error","Macrolanguage","language","region","date"],"mappings":"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","sourcesContent":["/**\n * @author Matthew Caruana Galizia <m@m.cg>\n * @license MIT: http://mattcg.mit-license.org/\n * @copyright Copyright (c) 2013, Matthew Caruana Galizia\n */\n\n/*jshint node:true*/\n\n'use strict';\n\nvar Tag = require('./Tag');\nvar Subtag = require('./Subtag');\n\nvar index = require('language-subtag-registry/data/json/index');\nvar registry = require('language-subtag-registry/data/json/registry');\n\nvar tags = function(tag) {\n\treturn new Tag(tag);\n};\n\nmodule.exports = tags;\n\ntags.check = function(tag) {\n\treturn new Tag(tag).valid();\n};\n\ntags.types = function(subtag) {\n\tvar types = index[subtag];\n\n\tif (!types) {\n\t\treturn [];\n\t}\n\n\treturn Object.keys(types).filter(function(type) {\n\t\treturn type !== 'grandfathered' && type !== 'redundant';\n\t});\n};\n\ntags.subtags = function(subtags) {\n\tvar result = [];\n\n\tif (!Array.isArray(subtags)) {\n\t\tsubtags = [subtags];\n\t}\n\n\tsubtags.forEach(function(subtag) {\n\t\ttags.types(subtag).forEach(function(type) {\n\t\t\tresult.push(new Subtag(subtag, type));\n\t\t});\n\t});\n\n\treturn result;\n};\n\ntags.filter = function(subtags) {\n\treturn subtags.filter(function(subtag) {\n\t\treturn !tags.types(subtag).length;\n\t});\n};\n\ntags.search = function(query, all) {\n\tvar test;\n\n\tif ('function' === typeof query.test) {\n\t\ttest = function(description) {\n\t\t\treturn query.test(description);\n\t\t};\n\n\t// If the query is all lowercase, make a case-insensitive match.\n\t} else if (query.toLowerCase() === query) {\n\t\ttest = function(description) {\n\t\t\treturn -1 !== description.toLowerCase().indexOf(query);\n\t\t};\n\t} else {\n\t\ttest = function(description) {\n\t\t\treturn -1 !== description.indexOf(query);\n\t\t};\n\t}\n\n\treturn registry.filter(function(record) {\n\t\tif (!record.Subtag && !all) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn record.Description.some(test);\n\n\t// Sort by matched description string length.\n\t// This is a quick way to push precise matches towards the top.\n\t}).sort(function(a, b) {\n\t\treturn Math.min.apply(Math, a.Description.filter(test).map(function(description) {\n\t\t\treturn description.length;\n\t\t})) - Math.min.apply(Math, b.Description.filter(test).map(function(description) {\n\t\t\treturn description.length;\n\t\t}));\n\t}).map(function(record) {\n\t\tif (record.Subtag) {\n\t\t\treturn new Subtag(record.Subtag, record.Type);\n\t\t}\n\n\t\treturn new Tag(record.Tag);\n\t});\n};\n\ntags.languages = function(macrolanguage) {\n\tvar i, l, record, results = [];\n\n\tmacrolanguage = macrolanguage.toLowerCase();\n\tif (!require('language-subtag-registry/data/json/macrolanguage')[macrolanguage]) {\n\t\tthrow new Error('\\'' + macrolanguage + '\\' is not a macrolanguage.');\n\t}\n\n\tfor (i = 0, l = registry.length; i < l; i++) {\n\t\trecord = registry[i];\n\t\tif (record.Macrolanguage === macrolanguage) {\n\t\t\tresults.push(new Subtag(record.Subtag, record.Type));\n\t\t}\n\t}\n\n\treturn results;\n};\n\ntags.language = function(subtag) {\n\treturn tags.type(subtag, 'language');\n};\n\ntags.region = function(subtag) {\n\treturn tags.type(subtag, 'region');\n};\n\ntags.type = function(subtag, type) {\n\tvar types = index[subtag.toLowerCase()];\n\n\tif (types && types[type]) {\n\t\treturn new Subtag(subtag, type);\n\t}\n\n\treturn null;\n};\n\ntags.date = function() {\n\treturn require('language-subtag-registry/data/json/meta')['File-Date'];\n};\n"]},"metadata":{},"sourceType":"script"}