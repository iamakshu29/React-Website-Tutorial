{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Verma\\\\Desktop\\\\Practice\\\\react\\\\react_tut\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const defaultName = \"user\";\n  const [fname, upName] = useState(defaultName);\n  const [lname, setLastName] = useState(\" \");\n  const [updatedname, setFullName] = useState(\" \");\n\n  const inputEvent = event => {\n    // console.log(event.target.value);\n    upName(event.target.value);\n  };\n\n  const inputEventTwo = event => {\n    setLastName(event.target.value);\n  };\n\n  const displayName = event => {\n    event.preventDefault();\n    setFullName(fname);\n  }; // to prevent the default behaviour of refresh page after submits the data we use event.preventDefault();\n  // coz of this page doesnot refresh\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello \", updatedname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: displayName,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        onChange: inputEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your last name\",\n        onChange: inputEventTwo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Click Me !!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"Jcr2FP0XjIEGPp1eoSAUhsKTTN8=\");\n\n_c = App;\nexport default App; // we add two extra things \n//* 1. we put the all the form elements in a form tag\n//* 2. we define the button type to submit earlier it was just a clickable button\n// the form tag also an event handler name onSubmit so we pass the same function to form tag\n//  which we pass to button in onClick event .\n// now the function trigger when we click the button same as before\n// but this time button is not just click it submits the data thats'y we use onSubmit\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/src/App.jsx"],"names":["React","useState","App","defaultName","fname","upName","lname","setLastName","updatedname","setFullName","inputEvent","event","target","value","inputEventTwo","displayName","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAMC,WAAW,GAAG,MAApB;AACA,QAAM,CAACC,KAAD,EAAQC,MAAR,IAAkBJ,QAAQ,CAACE,WAAD,CAAhC;AACA,QAAM,CAACG,KAAD,EAAOC,WAAP,IAAsBN,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM,CAACO,WAAD,EAAcC,WAAd,IAA6BR,QAAQ,CAAC,GAAD,CAA3C;;AAGA,QAAMS,UAAU,GAAIC,KAAD,IAAW;AAC1B;AACAN,IAAAA,MAAM,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AACH,GAHD;;AAKA,QAAMC,aAAa,GAAIH,KAAD,IAAS;AAC3BJ,IAAAA,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACH,GAFD;;AAIA,QAAME,WAAW,GAAIJ,KAAD,IAAS;AACzBA,IAAAA,KAAK,CAACK,cAAN;AACAP,IAAAA,WAAW,CAACL,KAAD,CAAX;AACH,GAHD,CAhBc,CAsBlB;AACA;;;AAKI,sBACI;AAAA,4BACI;AAAA,2BAAWI,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAIO,WAAlB;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,iBAA/B;AAAkD,QAAA,QAAQ,EAAEL;AAA5D;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,sBAA/B;AAAuD,QAAA,QAAQ,EAAEI;AAAjE;AAAA;AAAA;AAAA;AAAA,cAFA,eAIA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAWH,CAvCD;;GAAMZ,G;;KAAAA,G;AA0CN,eAAeA,GAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst App = () => {\r\n    const defaultName = \"user\";\r\n    const [fname, upName] = useState(defaultName);\r\n    const [lname,setLastName] = useState(\" \");\r\n    const [updatedname, setFullName] = useState(\" \");\r\n\r\n\r\n    const inputEvent = (event) => {\r\n        // console.log(event.target.value);\r\n        upName(event.target.value);\r\n    }\r\n\r\n    const inputEventTwo = (event)=>{\r\n        setLastName(event.target.value);\r\n    }\r\n\r\n    const displayName = (event)=>{\r\n        event.preventDefault();\r\n        setFullName(fname);\r\n    };\r\n\r\n    \r\n// to prevent the default behaviour of refresh page after submits the data we use event.preventDefault();\r\n// coz of this page doesnot refresh\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Hello {updatedname}</h1>\r\n            <form onSubmit = {displayName} >\r\n            <input type='text' placeholder=\"Enter your name\"  onChange={inputEvent} />\r\n            <input type='text' placeholder=\"Enter your last name\"  onChange={inputEventTwo} />\r\n            {/* <button type='submit' onClick = {display} >Click Me !!</button> */}\r\n            <button type='submit' >Click Me !!</button> \r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default App;\r\n\r\n// we add two extra things \r\n//* 1. we put the all the form elements in a form tag\r\n//* 2. we define the button type to submit earlier it was just a clickable button\r\n\r\n// the form tag also an event handler name onSubmit so we pass the same function to form tag\r\n//  which we pass to button in onClick event .\r\n// now the function trigger when we click the button same as before\r\n// but this time button is not just click it submits the data thats'y we use onSubmit"]},"metadata":{},"sourceType":"module"}