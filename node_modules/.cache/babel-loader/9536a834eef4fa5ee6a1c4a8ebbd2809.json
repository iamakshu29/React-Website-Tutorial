{"ast":null,"code":"/**\n * @author Matthew Caruana Galizia <m@m.cg>\n * @license MIT: http://mattcg.mit-license.org/\n * @copyright Copyright (c) 2013, Matthew Caruana Galizia\n */\n\n/*jshint node:true*/\n'use strict';\n\nvar index = require('language-subtag-registry/data/json/index');\n\nvar registry = require('language-subtag-registry/data/json/registry');\n\nmodule.exports = Subtag;\nSubtag.ERR_NONEXISTENT = 1;\nSubtag.ERR_TAG = 2;\n\nfunction Subtag(subtag, type) {\n  var types, i, record, error; // Lowercase for consistency (case is only a formatting convention, not a standard requirement).\n\n  subtag = subtag.toLowerCase();\n  type = type.toLowerCase();\n\n  error = function (code, message) {\n    var err;\n    err = new Error(message);\n    err.code = code;\n    err.subtag = subtag;\n    throw err;\n  };\n\n  types = index[subtag];\n\n  if (!types) {\n    error(Subtag.ERR_NONEXISTENT, 'Non-existent subtag \\'' + subtag + '\\'.');\n  }\n\n  i = types[type];\n\n  if (!i && 0 !== i) {\n    error(Subtag.ERR_NONEXISTENT, 'Non-existent subtag \\'' + subtag + '\\' of type \\'' + type + '\\'.');\n  }\n\n  record = registry[i];\n\n  if (!record.Subtag) {\n    error(Subtag.ERR_TAG, '\\'' + subtag + '\\' is a \\'' + type + '\\' tag.');\n  }\n\n  this.data = {};\n  this.data.subtag = subtag;\n  this.data.record = record;\n  this.data.type = type;\n}\n\nSubtag.prototype.type = function () {\n  return this.data.type;\n};\n\nSubtag.prototype.descriptions = function () {\n  // Every record has one or more descriptions (stored as an array).\n  return this.data.record.Description;\n};\n\nSubtag.prototype.preferred = function () {\n  var type,\n      preferred = this.data.record['Preferred-Value'];\n\n  if (preferred) {\n    type = this.data.type;\n\n    if (type === 'extlang') {\n      type = 'language';\n    }\n\n    return new Subtag(preferred, type);\n  }\n\n  return null;\n};\n\nSubtag.prototype.script = function () {\n  var script = this.data.record['Suppress-Script'];\n\n  if (script) {\n    return new Subtag(script, 'script');\n  }\n\n  return null;\n};\n\nSubtag.prototype.scope = function () {\n  return this.data.record.Scope || null;\n};\n\nSubtag.prototype.deprecated = function () {\n  return this.data.record.Deprecated || null;\n};\n\nSubtag.prototype.added = function () {\n  return this.data.record.Added;\n};\n\nSubtag.prototype.comments = function () {\n  // Comments don't always occur for records, so switch to an empty array if missing.\n  return this.data.record.Comments || [];\n};\n\nSubtag.prototype.format = function () {\n  var subtag = this.data.subtag;\n\n  switch (this.data.type) {\n    case 'region':\n      return subtag.toUpperCase();\n\n    case 'script':\n      return subtag[0].toUpperCase() + subtag.substr(1);\n  }\n\n  return subtag;\n};\n\nSubtag.prototype.toString = function () {\n  return this.format();\n};","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/node_modules/language-tags/lib/Subtag.js"],"names":["index","require","registry","module","exports","Subtag","ERR_NONEXISTENT","ERR_TAG","subtag","type","types","i","record","error","toLowerCase","code","message","err","Error","data","prototype","descriptions","Description","preferred","script","scope","Scope","deprecated","Deprecated","added","Added","comments","Comments","format","toUpperCase","substr","toString"],"mappings":"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","sourcesContent":["/**\n * @author Matthew Caruana Galizia <m@m.cg>\n * @license MIT: http://mattcg.mit-license.org/\n * @copyright Copyright (c) 2013, Matthew Caruana Galizia\n */\n\n/*jshint node:true*/\n\n'use strict';\n\nvar index = require('language-subtag-registry/data/json/index');\nvar registry = require('language-subtag-registry/data/json/registry');\n\nmodule.exports = Subtag;\n\nSubtag.ERR_NONEXISTENT = 1;\nSubtag.ERR_TAG = 2;\n\nfunction Subtag(subtag, type) {\n\tvar types, i, record, error;\n\n\t// Lowercase for consistency (case is only a formatting convention, not a standard requirement).\n\tsubtag = subtag.toLowerCase();\n\ttype = type.toLowerCase();\n\n\terror = function(code, message) {\n\t\tvar err;\n\n\t\terr = new Error(message);\n\t\terr.code = code;\n\t\terr.subtag = subtag;\n\t\tthrow err;\n\t};\n\n\ttypes = index[subtag];\n\tif (!types) {\n\t\terror(Subtag.ERR_NONEXISTENT, 'Non-existent subtag \\'' + subtag + '\\'.');\n\t}\n\n\ti = types[type];\n\tif (!i && 0 !== i) {\n\t\terror(Subtag.ERR_NONEXISTENT, 'Non-existent subtag \\'' + subtag + '\\' of type \\'' + type + '\\'.');\n\t}\n\n\trecord = registry[i];\n\tif (!record.Subtag) {\n\t\terror(Subtag.ERR_TAG, '\\'' + subtag + '\\' is a \\'' + type + '\\' tag.');\n\t}\n\n\tthis.data = {};\n\tthis.data.subtag = subtag;\n\tthis.data.record = record;\n\tthis.data.type = type;\n}\n\nSubtag.prototype.type = function() {\n\treturn this.data.type;\n};\n\nSubtag.prototype.descriptions = function() {\n\n\t// Every record has one or more descriptions (stored as an array).\n\treturn this.data.record.Description;\n};\n\nSubtag.prototype.preferred = function() {\n\tvar type, preferred = this.data.record['Preferred-Value'];\n\n\tif (preferred) {\n\t\ttype = this.data.type;\n\t\tif (type === 'extlang') {\n\t\t\ttype = 'language';\n\t\t}\n\n\t\treturn new Subtag(preferred, type);\n\t}\n\n\treturn null;\n};\n\nSubtag.prototype.script = function() {\n\tvar script = this.data.record['Suppress-Script'];\n\n\tif (script) {\n\t\treturn new Subtag(script, 'script');\n\t}\n\n\treturn null;\n};\n\nSubtag.prototype.scope = function() {\n\treturn this.data.record.Scope || null;\n};\n\nSubtag.prototype.deprecated = function() {\n\treturn this.data.record.Deprecated || null;\n};\n\nSubtag.prototype.added = function() {\n\treturn this.data.record.Added;\n};\n\nSubtag.prototype.comments = function() {\n\n\t// Comments don't always occur for records, so switch to an empty array if missing.\n\treturn this.data.record.Comments || [];\n};\n\nSubtag.prototype.format = function() {\n\tvar subtag = this.data.subtag;\n\n\tswitch (this.data.type) {\n\tcase 'region':\n\t\treturn subtag.toUpperCase();\n\tcase 'script':\n\t\treturn subtag[0].toUpperCase() + subtag.substr(1);\n\t}\n\n\treturn subtag;\n};\n\nSubtag.prototype.toString = function() {\n\treturn this.format();\n};\n"]},"metadata":{},"sourceType":"script"}