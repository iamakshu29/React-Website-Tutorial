{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Verma\\\\Desktop\\\\Practice\\\\react\\\\react_tut\\\\src\\\\App.jsx\";\nimport React, { createContext } from 'react';\nimport CompA from './CompA';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FirstName = /*#__PURE__*/createContext();\nconst LastName = /*#__PURE__*/createContext();\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FirstName.Provider, {\n      value: 'Akshu',\n      children: /*#__PURE__*/_jsxDEV(LastName.Provider, {\n        value: 'Verma',\n        children: /*#__PURE__*/_jsxDEV(CompA, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = App;\nexport default App;\nexport { FirstName, LastName }; //* React Hooks provides a concept call Context\n//!  we require three things\n//  1. Create Context\n//  2. Provide Context  \n//  3. Consume Context\n// React Context API allows you to easily access data at different levels of the component tree,\n// without passing prop to every level\n// ie \n// parent\n//   |\n// CompA\n//   |\n// CompB\n//   |\n// CompC\n//* what context API do for us is if we have to send the data from parent to CompC then\n//* we send it directly without any interference of CompA and CompB  \n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/src/App.jsx"],"names":["React","createContext","CompA","FirstName","LastName","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAGA,MAAMC,SAAS,gBAAGF,aAAa,EAA/B;AACA,MAAMG,QAAQ,gBAAGH,aAAa,EAA9B;;AAEA,MAAMI,GAAG,GAAG,MAAM;AAEd,sBACI;AAAA,2BACI,QAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,KAAK,EAAE,OAA3B;AAAA,6BACI,QAAC,QAAD,CAAU,QAAV;AAAmB,QAAA,KAAK,EAAE,OAA1B;AAAA,+BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AASH,CAXD;;KAAMA,G;AAaN,eAAeA,GAAf;AACA,SAASF,SAAT,EAAmBC,QAAnB,G,CAKA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React, { createContext } from 'react';\r\nimport CompA from './CompA';\r\n\r\n\r\nconst FirstName = createContext();\r\nconst LastName = createContext();\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <>\r\n            <FirstName.Provider value={'Akshu'}>\r\n                <LastName.Provider value={'Verma'}>\r\n                    <CompA />\r\n                </LastName.Provider>\r\n            </FirstName.Provider>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default App;\r\nexport { FirstName,LastName };\r\n\r\n\r\n\r\n\r\n//* React Hooks provides a concept call Context\r\n\r\n//!  we require three things\r\n//  1. Create Context\r\n//  2. Provide Context  \r\n//  3. Consume Context\r\n\r\n// React Context API allows you to easily access data at different levels of the component tree,\r\n// without passing prop to every level\r\n\r\n// ie \r\n// parent\r\n//   |\r\n// CompA\r\n//   |\r\n// CompB\r\n//   |\r\n// CompC\r\n\r\n//* what context API do for us is if we have to send the data from parent to CompC then\r\n//* we send it directly without any interference of CompA and CompB  "]},"metadata":{},"sourceType":"module"}