{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshat Verma\\\\Desktop\\\\Practice\\\\react\\\\react_tut\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const name = \"User\";\n  const [fname, upName] = useState(name);\n\n  const display = () => {\n    upName(input.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello \", fname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: display\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"hpf5WScm9upjtR1juxgEvWVaijc=\");\n\n_c = App;\nexport default App; // use camelCase while declaring events like onClick onMouseEnter onDoubleClick  \n// and don't add () after the function name while calling the function in events \n// use hooks while changing the state with events ...\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Akshat Verma/Desktop/Practice/react/react_tut/src/App.jsx"],"names":["React","useState","App","name","fname","upName","display","input","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,MAAMC,GAAG,GAAG,MAAI;AAAA;;AACZ,QAAMC,IAAI,GAAG,MAAb;AACA,QAAK,CAACC,KAAD,EAAOC,MAAP,IAAiBJ,QAAQ,CAACE,IAAD,CAA9B;;AAEA,QAAMG,OAAO,GAAG,MAAI;AAChBD,IAAAA,MAAM,CAACE,KAAK,CAACC,KAAP,CAAN;AACH,GAFD;;AAKA,sBACI;AAAA,4BACA;AAAA,2BAAWJ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,8BACG;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,iBAA/B;AAAiD,QAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAIE;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AASH,CAlBD;;GAAMJ,G;;KAAAA,G;AAqBN,eAAeA,GAAf,C,CAGA;AACA;AACA","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst App = ()=>{\r\n    const name = \"User\";\r\n    const[fname,upName] = useState(name);\r\n\r\n    const display = ()=>{\r\n        upName(input.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <h1>Hello {fname}</h1>\r\n        <form>\r\n           <input type='text' placeholder=\"Enter your name\" value=\"\" />\r\n           <button type='submit' onClick = {display} /> \r\n        </form>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default App;\r\n\r\n\r\n// use camelCase while declaring events like onClick onMouseEnter onDoubleClick  \r\n// and don't add () after the function name while calling the function in events \r\n// use hooks while changing the state with events ..."]},"metadata":{},"sourceType":"module"}